// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: messagebroker/messagebroker_blockchain_event.proto

package messagebroker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	managed "wego/pkg/grpc/managed"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockchainEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to BlockchainEvent:
	//	*BlockchainEvent_MicroBlockAppended
	//	*BlockchainEvent_BlockAppended
	//	*BlockchainEvent_RollbackCompleted
	//	*BlockchainEvent_AppendedBlockHistory
	BlockchainEvent isBlockchainEvent_BlockchainEvent `protobuf_oneof:"blockchain_event"`
}

func (x *BlockchainEvent) Reset() {
	*x = BlockchainEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainEvent) ProtoMessage() {}

func (x *BlockchainEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainEvent.ProtoReflect.Descriptor instead.
func (*BlockchainEvent) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{0}
}

func (m *BlockchainEvent) GetBlockchainEvent() isBlockchainEvent_BlockchainEvent {
	if m != nil {
		return m.BlockchainEvent
	}
	return nil
}

func (x *BlockchainEvent) GetMicroBlockAppended() *MicroBlockAppended {
	if x, ok := x.GetBlockchainEvent().(*BlockchainEvent_MicroBlockAppended); ok {
		return x.MicroBlockAppended
	}
	return nil
}

func (x *BlockchainEvent) GetBlockAppended() *BlockAppended {
	if x, ok := x.GetBlockchainEvent().(*BlockchainEvent_BlockAppended); ok {
		return x.BlockAppended
	}
	return nil
}

func (x *BlockchainEvent) GetRollbackCompleted() *RollbackCompleted {
	if x, ok := x.GetBlockchainEvent().(*BlockchainEvent_RollbackCompleted); ok {
		return x.RollbackCompleted
	}
	return nil
}

func (x *BlockchainEvent) GetAppendedBlockHistory() *AppendedBlockHistory {
	if x, ok := x.GetBlockchainEvent().(*BlockchainEvent_AppendedBlockHistory); ok {
		return x.AppendedBlockHistory
	}
	return nil
}

type isBlockchainEvent_BlockchainEvent interface {
	isBlockchainEvent_BlockchainEvent()
}

type BlockchainEvent_MicroBlockAppended struct {
	// Deprecated ErrorEvent error_event = 1;
	MicroBlockAppended *MicroBlockAppended `protobuf:"bytes,2,opt,name=micro_block_appended,json=microBlockAppended,proto3,oneof"`
}

type BlockchainEvent_BlockAppended struct {
	BlockAppended *BlockAppended `protobuf:"bytes,3,opt,name=block_appended,json=blockAppended,proto3,oneof"`
}

type BlockchainEvent_RollbackCompleted struct {
	RollbackCompleted *RollbackCompleted `protobuf:"bytes,4,opt,name=rollback_completed,json=rollbackCompleted,proto3,oneof"`
}

type BlockchainEvent_AppendedBlockHistory struct {
	AppendedBlockHistory *AppendedBlockHistory `protobuf:"bytes,5,opt,name=appended_block_history,json=appendedBlockHistory,proto3,oneof"`
}

func (*BlockchainEvent_MicroBlockAppended) isBlockchainEvent_BlockchainEvent() {}

func (*BlockchainEvent_BlockAppended) isBlockchainEvent_BlockchainEvent() {}

func (*BlockchainEvent_RollbackCompleted) isBlockchainEvent_BlockchainEvent() {}

func (*BlockchainEvent_AppendedBlockHistory) isBlockchainEvent_BlockchainEvent() {}

type GenericError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenericError) Reset() {
	*x = GenericError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericError) ProtoMessage() {}

func (x *GenericError) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericError.ProtoReflect.Descriptor instead.
func (*GenericError) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{1}
}

type BlockSignatureNotFoundError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockSignature []byte `protobuf:"bytes,1,opt,name=block_signature,json=blockSignature,proto3" json:"block_signature,omitempty"`
}

func (x *BlockSignatureNotFoundError) Reset() {
	*x = BlockSignatureNotFoundError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockSignatureNotFoundError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockSignatureNotFoundError) ProtoMessage() {}

func (x *BlockSignatureNotFoundError) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockSignatureNotFoundError.ProtoReflect.Descriptor instead.
func (*BlockSignatureNotFoundError) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{2}
}

func (x *BlockSignatureNotFoundError) GetBlockSignature() []byte {
	if x != nil {
		return x.BlockSignature
	}
	return nil
}

type MissingRequiredRequestField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MissingRequiredRequestField) Reset() {
	*x = MissingRequiredRequestField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissingRequiredRequestField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissingRequiredRequestField) ProtoMessage() {}

func (x *MissingRequiredRequestField) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissingRequiredRequestField.ProtoReflect.Descriptor instead.
func (*MissingRequiredRequestField) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{3}
}

type MissingAuthorizationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MissingAuthorizationMetadata) Reset() {
	*x = MissingAuthorizationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissingAuthorizationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissingAuthorizationMetadata) ProtoMessage() {}

func (x *MissingAuthorizationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissingAuthorizationMetadata.ProtoReflect.Descriptor instead.
func (*MissingAuthorizationMetadata) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{4}
}

type InvalidApiKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvalidApiKey) Reset() {
	*x = InvalidApiKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidApiKey) ProtoMessage() {}

func (x *InvalidApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidApiKey.ProtoReflect.Descriptor instead.
func (*InvalidApiKey) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{5}
}

type InvalidToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvalidToken) Reset() {
	*x = InvalidToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidToken) ProtoMessage() {}

func (x *InvalidToken) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidToken.ProtoReflect.Descriptor instead.
func (*InvalidToken) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{6}
}

type MicroBlockAppended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*managed.Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *MicroBlockAppended) Reset() {
	*x = MicroBlockAppended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicroBlockAppended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicroBlockAppended) ProtoMessage() {}

func (x *MicroBlockAppended) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicroBlockAppended.ProtoReflect.Descriptor instead.
func (*MicroBlockAppended) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{7}
}

func (x *MicroBlockAppended) GetTxs() []*managed.Transaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

type BlockAppended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockSignature []byte   `protobuf:"bytes,1,opt,name=block_signature,json=blockSignature,proto3" json:"block_signature,omitempty"`
	Reference      []byte   `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	TxIds          [][]byte `protobuf:"bytes,3,rep,name=tx_ids,json=txIds,proto3" json:"tx_ids,omitempty"`
	MinerAddress   []byte   `protobuf:"bytes,4,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
	Height         int64    `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Version        int32    `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp      int64    `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fee            int64    `protobuf:"varint,8,opt,name=fee,proto3" json:"fee,omitempty"`
	BlockSize      int32    `protobuf:"varint,9,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	Features       []int32  `protobuf:"varint,10,rep,packed,name=features,proto3" json:"features,omitempty"`
}

func (x *BlockAppended) Reset() {
	*x = BlockAppended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockAppended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockAppended) ProtoMessage() {}

func (x *BlockAppended) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockAppended.ProtoReflect.Descriptor instead.
func (*BlockAppended) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{8}
}

func (x *BlockAppended) GetBlockSignature() []byte {
	if x != nil {
		return x.BlockSignature
	}
	return nil
}

func (x *BlockAppended) GetReference() []byte {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *BlockAppended) GetTxIds() [][]byte {
	if x != nil {
		return x.TxIds
	}
	return nil
}

func (x *BlockAppended) GetMinerAddress() []byte {
	if x != nil {
		return x.MinerAddress
	}
	return nil
}

func (x *BlockAppended) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockAppended) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BlockAppended) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockAppended) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *BlockAppended) GetBlockSize() int32 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *BlockAppended) GetFeatures() []int32 {
	if x != nil {
		return x.Features
	}
	return nil
}

type RollbackCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnToBlockSignature []byte   `protobuf:"bytes,1,opt,name=return_to_block_signature,json=returnToBlockSignature,proto3" json:"return_to_block_signature,omitempty"`
	RollbackTxIds          [][]byte `protobuf:"bytes,2,rep,name=rollback_tx_ids,json=rollbackTxIds,proto3" json:"rollback_tx_ids,omitempty"`
}

func (x *RollbackCompleted) Reset() {
	*x = RollbackCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackCompleted) ProtoMessage() {}

func (x *RollbackCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackCompleted.ProtoReflect.Descriptor instead.
func (*RollbackCompleted) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{9}
}

func (x *RollbackCompleted) GetReturnToBlockSignature() []byte {
	if x != nil {
		return x.ReturnToBlockSignature
	}
	return nil
}

func (x *RollbackCompleted) GetRollbackTxIds() [][]byte {
	if x != nil {
		return x.RollbackTxIds
	}
	return nil
}

type AppendedBlockHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockSignature []byte                 `protobuf:"bytes,1,opt,name=block_signature,json=blockSignature,proto3" json:"block_signature,omitempty"`
	Reference      []byte                 `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Txs            []*managed.Transaction `protobuf:"bytes,3,rep,name=txs,proto3" json:"txs,omitempty"`
	MinerAddress   []byte                 `protobuf:"bytes,4,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
	Height         int64                  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Version        int32                  `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp      int64                  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fee            int64                  `protobuf:"varint,8,opt,name=fee,proto3" json:"fee,omitempty"`
	BlockSize      int32                  `protobuf:"varint,9,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	Features       []int32                `protobuf:"varint,10,rep,packed,name=features,proto3" json:"features,omitempty"`
}

func (x *AppendedBlockHistory) Reset() {
	*x = AppendedBlockHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendedBlockHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendedBlockHistory) ProtoMessage() {}

func (x *AppendedBlockHistory) ProtoReflect() protoreflect.Message {
	mi := &file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendedBlockHistory.ProtoReflect.Descriptor instead.
func (*AppendedBlockHistory) Descriptor() ([]byte, []int) {
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP(), []int{10}
}

func (x *AppendedBlockHistory) GetBlockSignature() []byte {
	if x != nil {
		return x.BlockSignature
	}
	return nil
}

func (x *AppendedBlockHistory) GetReference() []byte {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *AppendedBlockHistory) GetTxs() []*managed.Transaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *AppendedBlockHistory) GetMinerAddress() []byte {
	if x != nil {
		return x.MinerAddress
	}
	return nil
}

func (x *AppendedBlockHistory) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AppendedBlockHistory) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AppendedBlockHistory) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AppendedBlockHistory) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AppendedBlockHistory) GetBlockSize() int32 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *AppendedBlockHistory) GetFeatures() []int32 {
	if x != nil {
		return x.Features
	}
	return nil
}

var File_messagebroker_messagebroker_blockchain_event_proto protoreflect.FileDescriptor

var file_messagebroker_messagebroker_blockchain_event_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x1a, 0x19, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xfb, 0x02, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x14, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x47, 0x0a,
	0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x12, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x5d, 0x0a, 0x16, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x14, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x0e,
	0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x46,
	0x0a, 0x1b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x0f, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x0e, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x12, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x03,
	0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22, 0xaf, 0x02, 0x0a,
	0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x78, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x66, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x76,
	0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x6f,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x54, 0x78, 0x49, 0x64, 0x73, 0x22, 0xcf, 0x02, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x42, 0x63, 0x0a, 0x32, 0x63, 0x6f, 0x6d, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5a, 0x1b,
	0x77, 0x65, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0xaa, 0x02, 0x0f, 0x57, 0x61,
	0x76, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messagebroker_messagebroker_blockchain_event_proto_rawDescOnce sync.Once
	file_messagebroker_messagebroker_blockchain_event_proto_rawDescData = file_messagebroker_messagebroker_blockchain_event_proto_rawDesc
)

func file_messagebroker_messagebroker_blockchain_event_proto_rawDescGZIP() []byte {
	file_messagebroker_messagebroker_blockchain_event_proto_rawDescOnce.Do(func() {
		file_messagebroker_messagebroker_blockchain_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_messagebroker_messagebroker_blockchain_event_proto_rawDescData)
	})
	return file_messagebroker_messagebroker_blockchain_event_proto_rawDescData
}

var file_messagebroker_messagebroker_blockchain_event_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_messagebroker_messagebroker_blockchain_event_proto_goTypes = []interface{}{
	(*BlockchainEvent)(nil),              // 0: wavesenterprise.BlockchainEvent
	(*GenericError)(nil),                 // 1: wavesenterprise.GenericError
	(*BlockSignatureNotFoundError)(nil),  // 2: wavesenterprise.BlockSignatureNotFoundError
	(*MissingRequiredRequestField)(nil),  // 3: wavesenterprise.MissingRequiredRequestField
	(*MissingAuthorizationMetadata)(nil), // 4: wavesenterprise.MissingAuthorizationMetadata
	(*InvalidApiKey)(nil),                // 5: wavesenterprise.InvalidApiKey
	(*InvalidToken)(nil),                 // 6: wavesenterprise.InvalidToken
	(*MicroBlockAppended)(nil),           // 7: wavesenterprise.MicroBlockAppended
	(*BlockAppended)(nil),                // 8: wavesenterprise.BlockAppended
	(*RollbackCompleted)(nil),            // 9: wavesenterprise.RollbackCompleted
	(*AppendedBlockHistory)(nil),         // 10: wavesenterprise.AppendedBlockHistory
	(*managed.Transaction)(nil),          // 11: wavesenterprise.Transaction
}
var file_messagebroker_messagebroker_blockchain_event_proto_depIdxs = []int32{
	7,  // 0: wavesenterprise.BlockchainEvent.micro_block_appended:type_name -> wavesenterprise.MicroBlockAppended
	8,  // 1: wavesenterprise.BlockchainEvent.block_appended:type_name -> wavesenterprise.BlockAppended
	9,  // 2: wavesenterprise.BlockchainEvent.rollback_completed:type_name -> wavesenterprise.RollbackCompleted
	10, // 3: wavesenterprise.BlockchainEvent.appended_block_history:type_name -> wavesenterprise.AppendedBlockHistory
	11, // 4: wavesenterprise.MicroBlockAppended.txs:type_name -> wavesenterprise.Transaction
	11, // 5: wavesenterprise.AppendedBlockHistory.txs:type_name -> wavesenterprise.Transaction
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_messagebroker_messagebroker_blockchain_event_proto_init() }
func file_messagebroker_messagebroker_blockchain_event_proto_init() {
	if File_messagebroker_messagebroker_blockchain_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockSignatureNotFoundError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissingRequiredRequestField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissingAuthorizationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidApiKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MicroBlockAppended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockAppended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendedBlockHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messagebroker_messagebroker_blockchain_event_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*BlockchainEvent_MicroBlockAppended)(nil),
		(*BlockchainEvent_BlockAppended)(nil),
		(*BlockchainEvent_RollbackCompleted)(nil),
		(*BlockchainEvent_AppendedBlockHistory)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messagebroker_messagebroker_blockchain_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messagebroker_messagebroker_blockchain_event_proto_goTypes,
		DependencyIndexes: file_messagebroker_messagebroker_blockchain_event_proto_depIdxs,
		MessageInfos:      file_messagebroker_messagebroker_blockchain_event_proto_msgTypes,
	}.Build()
	File_messagebroker_messagebroker_blockchain_event_proto = out.File
	file_messagebroker_messagebroker_blockchain_event_proto_rawDesc = nil
	file_messagebroker_messagebroker_blockchain_event_proto_goTypes = nil
	file_messagebroker_messagebroker_blockchain_event_proto_depIdxs = nil
}
