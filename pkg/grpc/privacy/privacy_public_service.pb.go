// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: privacy/privacy_public_service.proto

package privacy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	grpc "wego/pkg/grpc"
	entity "wego/pkg/grpc/entity"
	managed "wego/pkg/grpc/managed"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicyItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	DataHash string `protobuf:"bytes,2,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
}

func (x *PolicyItemRequest) Reset() {
	*x = PolicyItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyItemRequest) ProtoMessage() {}

func (x *PolicyItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyItemRequest.ProtoReflect.Descriptor instead.
func (*PolicyItemRequest) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyItemRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *PolicyItemRequest) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

type PolicyItemDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PolicyItemDataResponse) Reset() {
	*x = PolicyItemDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyItemDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyItemDataResponse) ProtoMessage() {}

func (x *PolicyItemDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyItemDataResponse.ProtoReflect.Descriptor instead.
func (*PolicyItemDataResponse) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{1}
}

func (x *PolicyItemDataResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PolicyItemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderAddress string              `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	PolicyId      string              `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Info          *PolicyItemFileInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	DataHash      string              `protobuf:"bytes,4,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
}

func (x *PolicyItemInfoResponse) Reset() {
	*x = PolicyItemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyItemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyItemInfoResponse) ProtoMessage() {}

func (x *PolicyItemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyItemInfoResponse.ProtoReflect.Descriptor instead.
func (*PolicyItemInfoResponse) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{2}
}

func (x *PolicyItemInfoResponse) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *PolicyItemInfoResponse) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *PolicyItemInfoResponse) GetInfo() *PolicyItemFileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PolicyItemInfoResponse) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

type PolicyItemDataExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *PolicyItemDataExistsResponse) Reset() {
	*x = PolicyItemDataExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyItemDataExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyItemDataExistsResponse) ProtoMessage() {}

func (x *PolicyItemDataExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyItemDataExistsResponse.ProtoReflect.Descriptor instead.
func (*PolicyItemDataExistsResponse) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{3}
}

func (x *PolicyItemDataExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type PolicyItemFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename  string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Size      int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Author    string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Comment   string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *PolicyItemFileInfo) Reset() {
	*x = PolicyItemFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyItemFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyItemFileInfo) ProtoMessage() {}

func (x *PolicyItemFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyItemFileInfo.ProtoReflect.Descriptor instead.
func (*PolicyItemFileInfo) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{4}
}

func (x *PolicyItemFileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PolicyItemFileInfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PolicyItemFileInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PolicyItemFileInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PolicyItemFileInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type SendDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxVersion int32                              `protobuf:"varint,1,opt,name=tx_version,json=txVersion,proto3" json:"tx_version,omitempty"`
	Tx        *managed.PolicyDataHashTransaction `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *SendDataResponse) Reset() {
	*x = SendDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDataResponse) ProtoMessage() {}

func (x *SendDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDataResponse.ProtoReflect.Descriptor instead.
func (*SendDataResponse) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{5}
}

func (x *SendDataResponse) GetTxVersion() int32 {
	if x != nil {
		return x.TxVersion
	}
	return 0
}

func (x *SendDataResponse) GetTx() *managed.PolicyDataHashTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

type SendDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *SendDataMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Data     []byte            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendDataRequest) Reset() {
	*x = SendDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDataRequest) ProtoMessage() {}

func (x *SendDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDataRequest.ProtoReflect.Descriptor instead.
func (*SendDataRequest) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{6}
}

func (x *SendDataRequest) GetMetadata() *SendDataMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SendDataRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendLargeDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*SendLargeDataRequest_Metadata
	//	*SendLargeDataRequest_File
	Request isSendLargeDataRequest_Request `protobuf_oneof:"request"`
}

func (x *SendLargeDataRequest) Reset() {
	*x = SendLargeDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLargeDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLargeDataRequest) ProtoMessage() {}

func (x *SendLargeDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLargeDataRequest.ProtoReflect.Descriptor instead.
func (*SendLargeDataRequest) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{7}
}

func (m *SendLargeDataRequest) GetRequest() isSendLargeDataRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *SendLargeDataRequest) GetMetadata() *SendDataMetadata {
	if x, ok := x.GetRequest().(*SendLargeDataRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *SendLargeDataRequest) GetFile() *File {
	if x, ok := x.GetRequest().(*SendLargeDataRequest_File); ok {
		return x.File
	}
	return nil
}

type isSendLargeDataRequest_Request interface {
	isSendLargeDataRequest_Request()
}

type SendLargeDataRequest_Metadata struct {
	Metadata *SendDataMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type SendLargeDataRequest_File struct {
	File *File `protobuf:"bytes,2,opt,name=file,proto3,oneof"`
}

func (*SendLargeDataRequest_Metadata) isSendLargeDataRequest_Request() {}

func (*SendLargeDataRequest_File) isSendLargeDataRequest_Request() {}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{8}
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type SendDataMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderAddress string                  `protobuf:"bytes,1,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	PolicyId      string                  `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	DataHash      string                  `protobuf:"bytes,3,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	Info          *PolicyItemFileInfo     `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Fee           int64                   `protobuf:"varint,6,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeAssetId    *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=fee_asset_id,json=feeAssetId,proto3" json:"fee_asset_id,omitempty"`
	AtomicBadge   *grpc.AtomicBadge       `protobuf:"bytes,8,opt,name=atomic_badge,json=atomicBadge,proto3" json:"atomic_badge,omitempty"`
	Password      *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	BroadcastTx   bool                    `protobuf:"varint,10,opt,name=broadcast_tx,json=broadcastTx,proto3" json:"broadcast_tx,omitempty"`
	Certificates  [][]byte                `protobuf:"bytes,11,rep,name=certificates,proto3" json:"certificates,omitempty"`
}

func (x *SendDataMetadata) Reset() {
	*x = SendDataMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendDataMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDataMetadata) ProtoMessage() {}

func (x *SendDataMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDataMetadata.ProtoReflect.Descriptor instead.
func (*SendDataMetadata) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{9}
}

func (x *SendDataMetadata) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *SendDataMetadata) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *SendDataMetadata) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *SendDataMetadata) GetInfo() *PolicyItemFileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SendDataMetadata) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *SendDataMetadata) GetFeeAssetId() *wrapperspb.StringValue {
	if x != nil {
		return x.FeeAssetId
	}
	return nil
}

func (x *SendDataMetadata) GetAtomicBadge() *grpc.AtomicBadge {
	if x != nil {
		return x.AtomicBadge
	}
	return nil
}

func (x *SendDataMetadata) GetPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *SendDataMetadata) GetBroadcastTx() bool {
	if x != nil {
		return x.BroadcastTx
	}
	return false
}

func (x *SendDataMetadata) GetCertificates() [][]byte {
	if x != nil {
		return x.Certificates
	}
	return nil
}

type PolicyIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
}

func (x *PolicyIdRequest) Reset() {
	*x = PolicyIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyIdRequest) ProtoMessage() {}

func (x *PolicyIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyIdRequest.ProtoReflect.Descriptor instead.
func (*PolicyIdRequest) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{10}
}

func (x *PolicyIdRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

type HashesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashes []string `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *HashesResponse) Reset() {
	*x = HashesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashesResponse) ProtoMessage() {}

func (x *HashesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashesResponse.ProtoReflect.Descriptor instead.
func (*HashesResponse) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{11}
}

func (x *HashesResponse) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type ForceSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceRestarted int32 `protobuf:"varint,1,opt,name=force_restarted,json=forceRestarted,proto3" json:"force_restarted,omitempty"`
}

func (x *ForceSyncResponse) Reset() {
	*x = ForceSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_privacy_public_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceSyncResponse) ProtoMessage() {}

func (x *ForceSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_privacy_public_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceSyncResponse.ProtoReflect.Descriptor instead.
func (*ForceSyncResponse) Descriptor() ([]byte, []int) {
	return file_privacy_privacy_public_service_proto_rawDescGZIP(), []int{12}
}

func (x *ForceSyncResponse) GetForceRestarted() int32 {
	if x != nil {
		return x.ForceRestarted
	}
	return 0
}

var File_privacy_privacy_public_service_proto protoreflect.FileDescriptor

var file_privacy_privacy_public_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x12, 0x61, 0x74,
	0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x11, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x2c, 0x0a, 0x16, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xb7, 0x01, 0x0a, 0x16, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x22, 0x36, 0x0a, 0x1c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x02, 0x74,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0x69, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x72, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x20,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0xc5, 0x03, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x41,
	0x74, 0x6f, 0x6d, 0x69, 0x63, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x0b, 0x61, 0x74, 0x6f, 0x6d,
	0x69, 0x63, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74,
	0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x54, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x48, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x22, 0x3c, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x32, 0x88, 0x08, 0x0a, 0x14, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x27, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x72, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x5e, 0x0a, 0x0a, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x06, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x48, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x12, 0x25, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x09, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x25, 0x2e, 0x77, 0x61,
	0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x59, 0x0a, 0x2c, 0x63,
	0x6f, 0x6d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x01, 0x5a, 0x15, 0x77,
	0x65, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0xaa, 0x02, 0x0f, 0x57, 0x61, 0x76, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_privacy_privacy_public_service_proto_rawDescOnce sync.Once
	file_privacy_privacy_public_service_proto_rawDescData = file_privacy_privacy_public_service_proto_rawDesc
)

func file_privacy_privacy_public_service_proto_rawDescGZIP() []byte {
	file_privacy_privacy_public_service_proto_rawDescOnce.Do(func() {
		file_privacy_privacy_public_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_privacy_privacy_public_service_proto_rawDescData)
	})
	return file_privacy_privacy_public_service_proto_rawDescData
}

var file_privacy_privacy_public_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_privacy_privacy_public_service_proto_goTypes = []interface{}{
	(*PolicyItemRequest)(nil),                 // 0: wavesenterprise.grpc.PolicyItemRequest
	(*PolicyItemDataResponse)(nil),            // 1: wavesenterprise.grpc.PolicyItemDataResponse
	(*PolicyItemInfoResponse)(nil),            // 2: wavesenterprise.grpc.PolicyItemInfoResponse
	(*PolicyItemDataExistsResponse)(nil),      // 3: wavesenterprise.grpc.PolicyItemDataExistsResponse
	(*PolicyItemFileInfo)(nil),                // 4: wavesenterprise.grpc.PolicyItemFileInfo
	(*SendDataResponse)(nil),                  // 5: wavesenterprise.grpc.SendDataResponse
	(*SendDataRequest)(nil),                   // 6: wavesenterprise.grpc.SendDataRequest
	(*SendLargeDataRequest)(nil),              // 7: wavesenterprise.grpc.SendLargeDataRequest
	(*File)(nil),                              // 8: wavesenterprise.grpc.File
	(*SendDataMetadata)(nil),                  // 9: wavesenterprise.grpc.SendDataMetadata
	(*PolicyIdRequest)(nil),                   // 10: wavesenterprise.grpc.PolicyIdRequest
	(*HashesResponse)(nil),                    // 11: wavesenterprise.grpc.HashesResponse
	(*ForceSyncResponse)(nil),                 // 12: wavesenterprise.grpc.ForceSyncResponse
	(*managed.PolicyDataHashTransaction)(nil), // 13: wavesenterprise.PolicyDataHashTransaction
	(*wrapperspb.StringValue)(nil),            // 14: google.protobuf.StringValue
	(*grpc.AtomicBadge)(nil),                  // 15: wavesenterprise.AtomicBadge
	(*entity.AddressesResponse)(nil),          // 16: wavesenterprise.entity.AddressesResponse
}
var file_privacy_privacy_public_service_proto_depIdxs = []int32{
	4,  // 0: wavesenterprise.grpc.PolicyItemInfoResponse.info:type_name -> wavesenterprise.grpc.PolicyItemFileInfo
	13, // 1: wavesenterprise.grpc.SendDataResponse.tx:type_name -> wavesenterprise.PolicyDataHashTransaction
	9,  // 2: wavesenterprise.grpc.SendDataRequest.metadata:type_name -> wavesenterprise.grpc.SendDataMetadata
	9,  // 3: wavesenterprise.grpc.SendLargeDataRequest.metadata:type_name -> wavesenterprise.grpc.SendDataMetadata
	8,  // 4: wavesenterprise.grpc.SendLargeDataRequest.file:type_name -> wavesenterprise.grpc.File
	4,  // 5: wavesenterprise.grpc.SendDataMetadata.info:type_name -> wavesenterprise.grpc.PolicyItemFileInfo
	14, // 6: wavesenterprise.grpc.SendDataMetadata.fee_asset_id:type_name -> google.protobuf.StringValue
	15, // 7: wavesenterprise.grpc.SendDataMetadata.atomic_badge:type_name -> wavesenterprise.AtomicBadge
	14, // 8: wavesenterprise.grpc.SendDataMetadata.password:type_name -> google.protobuf.StringValue
	0,  // 9: wavesenterprise.grpc.PrivacyPublicService.GetPolicyItemData:input_type -> wavesenterprise.grpc.PolicyItemRequest
	0,  // 10: wavesenterprise.grpc.PrivacyPublicService.GetPolicyItemLargeData:input_type -> wavesenterprise.grpc.PolicyItemRequest
	0,  // 11: wavesenterprise.grpc.PrivacyPublicService.GetPolicyItemInfo:input_type -> wavesenterprise.grpc.PolicyItemRequest
	0,  // 12: wavesenterprise.grpc.PrivacyPublicService.PolicyItemDataExists:input_type -> wavesenterprise.grpc.PolicyItemRequest
	6,  // 13: wavesenterprise.grpc.PrivacyPublicService.SendData:input_type -> wavesenterprise.grpc.SendDataRequest
	7,  // 14: wavesenterprise.grpc.PrivacyPublicService.SendLargeData:input_type -> wavesenterprise.grpc.SendLargeDataRequest
	10, // 15: wavesenterprise.grpc.PrivacyPublicService.Recipients:input_type -> wavesenterprise.grpc.PolicyIdRequest
	10, // 16: wavesenterprise.grpc.PrivacyPublicService.Owners:input_type -> wavesenterprise.grpc.PolicyIdRequest
	10, // 17: wavesenterprise.grpc.PrivacyPublicService.Hashes:input_type -> wavesenterprise.grpc.PolicyIdRequest
	10, // 18: wavesenterprise.grpc.PrivacyPublicService.ForceSync:input_type -> wavesenterprise.grpc.PolicyIdRequest
	1,  // 19: wavesenterprise.grpc.PrivacyPublicService.GetPolicyItemData:output_type -> wavesenterprise.grpc.PolicyItemDataResponse
	1,  // 20: wavesenterprise.grpc.PrivacyPublicService.GetPolicyItemLargeData:output_type -> wavesenterprise.grpc.PolicyItemDataResponse
	2,  // 21: wavesenterprise.grpc.PrivacyPublicService.GetPolicyItemInfo:output_type -> wavesenterprise.grpc.PolicyItemInfoResponse
	3,  // 22: wavesenterprise.grpc.PrivacyPublicService.PolicyItemDataExists:output_type -> wavesenterprise.grpc.PolicyItemDataExistsResponse
	5,  // 23: wavesenterprise.grpc.PrivacyPublicService.SendData:output_type -> wavesenterprise.grpc.SendDataResponse
	5,  // 24: wavesenterprise.grpc.PrivacyPublicService.SendLargeData:output_type -> wavesenterprise.grpc.SendDataResponse
	16, // 25: wavesenterprise.grpc.PrivacyPublicService.Recipients:output_type -> wavesenterprise.entity.AddressesResponse
	16, // 26: wavesenterprise.grpc.PrivacyPublicService.Owners:output_type -> wavesenterprise.entity.AddressesResponse
	11, // 27: wavesenterprise.grpc.PrivacyPublicService.Hashes:output_type -> wavesenterprise.grpc.HashesResponse
	12, // 28: wavesenterprise.grpc.PrivacyPublicService.ForceSync:output_type -> wavesenterprise.grpc.ForceSyncResponse
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_privacy_privacy_public_service_proto_init() }
func file_privacy_privacy_public_service_proto_init() {
	if File_privacy_privacy_public_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_privacy_privacy_public_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyItemDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyItemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyItemDataExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyItemFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLargeDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendDataMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_privacy_public_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_privacy_privacy_public_service_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SendLargeDataRequest_Metadata)(nil),
		(*SendLargeDataRequest_File)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_privacy_privacy_public_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_privacy_privacy_public_service_proto_goTypes,
		DependencyIndexes: file_privacy_privacy_public_service_proto_depIdxs,
		MessageInfos:      file_privacy_privacy_public_service_proto_msgTypes,
	}.Build()
	File_privacy_privacy_public_service_proto = out.File
	file_privacy_privacy_public_service_proto_rawDesc = nil
	file_privacy_privacy_public_service_proto_goTypes = nil
	file_privacy_privacy_public_service_proto_depIdxs = nil
}
