// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: managed/transaction.proto

package managed

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	genesis "wego/pkg/grpc/genesis"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Types that are assignable to Transaction:
	//	*Transaction_GenesisTransaction
	//	*Transaction_GenesisPermitTransaction
	//	*Transaction_GenesisRegisterNodeTransaction
	//	*Transaction_RegisterNodeTransaction
	//	*Transaction_CreateAliasTransaction
	//	*Transaction_IssueTransaction
	//	*Transaction_ReissueTransaction
	//	*Transaction_BurnTransaction
	//	*Transaction_LeaseTransaction
	//	*Transaction_LeaseCancelTransaction
	//	*Transaction_SponsorFeeTransaction
	//	*Transaction_SetAssetScriptTransaction
	//	*Transaction_DataTransaction
	//	*Transaction_TransferTransaction
	//	*Transaction_MassTransferTransaction
	//	*Transaction_PermitTransaction
	//	*Transaction_CreatePolicyTransaction
	//	*Transaction_UpdatePolicyTransaction
	//	*Transaction_PolicyDataHashTransaction
	//	*Transaction_CreateContractTransaction
	//	*Transaction_CallContractTransaction
	//	*Transaction_ExecutedContractTransaction
	//	*Transaction_DisableContractTransaction
	//	*Transaction_UpdateContractTransaction
	//	*Transaction_SetScriptTransaction
	//	*Transaction_AtomicTransaction
	Transaction isTransaction_Transaction `protobuf_oneof:"transaction"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managed_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_managed_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_managed_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (m *Transaction) GetTransaction() isTransaction_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (x *Transaction) GetGenesisTransaction() *genesis.GenesisTransaction {
	if x, ok := x.GetTransaction().(*Transaction_GenesisTransaction); ok {
		return x.GenesisTransaction
	}
	return nil
}

func (x *Transaction) GetGenesisPermitTransaction() *genesis.GenesisPermitTransaction {
	if x, ok := x.GetTransaction().(*Transaction_GenesisPermitTransaction); ok {
		return x.GenesisPermitTransaction
	}
	return nil
}

func (x *Transaction) GetGenesisRegisterNodeTransaction() *genesis.GenesisRegisterNodeTransaction {
	if x, ok := x.GetTransaction().(*Transaction_GenesisRegisterNodeTransaction); ok {
		return x.GenesisRegisterNodeTransaction
	}
	return nil
}

func (x *Transaction) GetRegisterNodeTransaction() *RegisterNodeTransaction {
	if x, ok := x.GetTransaction().(*Transaction_RegisterNodeTransaction); ok {
		return x.RegisterNodeTransaction
	}
	return nil
}

func (x *Transaction) GetCreateAliasTransaction() *CreateAliasTransaction {
	if x, ok := x.GetTransaction().(*Transaction_CreateAliasTransaction); ok {
		return x.CreateAliasTransaction
	}
	return nil
}

func (x *Transaction) GetIssueTransaction() *IssueTransaction {
	if x, ok := x.GetTransaction().(*Transaction_IssueTransaction); ok {
		return x.IssueTransaction
	}
	return nil
}

func (x *Transaction) GetReissueTransaction() *ReissueTransaction {
	if x, ok := x.GetTransaction().(*Transaction_ReissueTransaction); ok {
		return x.ReissueTransaction
	}
	return nil
}

func (x *Transaction) GetBurnTransaction() *BurnTransaction {
	if x, ok := x.GetTransaction().(*Transaction_BurnTransaction); ok {
		return x.BurnTransaction
	}
	return nil
}

func (x *Transaction) GetLeaseTransaction() *LeaseTransaction {
	if x, ok := x.GetTransaction().(*Transaction_LeaseTransaction); ok {
		return x.LeaseTransaction
	}
	return nil
}

func (x *Transaction) GetLeaseCancelTransaction() *LeaseCancelTransaction {
	if x, ok := x.GetTransaction().(*Transaction_LeaseCancelTransaction); ok {
		return x.LeaseCancelTransaction
	}
	return nil
}

func (x *Transaction) GetSponsorFeeTransaction() *SponsorFeeTransaction {
	if x, ok := x.GetTransaction().(*Transaction_SponsorFeeTransaction); ok {
		return x.SponsorFeeTransaction
	}
	return nil
}

func (x *Transaction) GetSetAssetScriptTransaction() *SetAssetScriptTransaction {
	if x, ok := x.GetTransaction().(*Transaction_SetAssetScriptTransaction); ok {
		return x.SetAssetScriptTransaction
	}
	return nil
}

func (x *Transaction) GetDataTransaction() *DataTransaction {
	if x, ok := x.GetTransaction().(*Transaction_DataTransaction); ok {
		return x.DataTransaction
	}
	return nil
}

func (x *Transaction) GetTransferTransaction() *TransferTransaction {
	if x, ok := x.GetTransaction().(*Transaction_TransferTransaction); ok {
		return x.TransferTransaction
	}
	return nil
}

func (x *Transaction) GetMassTransferTransaction() *MassTransferTransaction {
	if x, ok := x.GetTransaction().(*Transaction_MassTransferTransaction); ok {
		return x.MassTransferTransaction
	}
	return nil
}

func (x *Transaction) GetPermitTransaction() *PermitTransaction {
	if x, ok := x.GetTransaction().(*Transaction_PermitTransaction); ok {
		return x.PermitTransaction
	}
	return nil
}

func (x *Transaction) GetCreatePolicyTransaction() *CreatePolicyTransaction {
	if x, ok := x.GetTransaction().(*Transaction_CreatePolicyTransaction); ok {
		return x.CreatePolicyTransaction
	}
	return nil
}

func (x *Transaction) GetUpdatePolicyTransaction() *UpdatePolicyTransaction {
	if x, ok := x.GetTransaction().(*Transaction_UpdatePolicyTransaction); ok {
		return x.UpdatePolicyTransaction
	}
	return nil
}

func (x *Transaction) GetPolicyDataHashTransaction() *PolicyDataHashTransaction {
	if x, ok := x.GetTransaction().(*Transaction_PolicyDataHashTransaction); ok {
		return x.PolicyDataHashTransaction
	}
	return nil
}

func (x *Transaction) GetCreateContractTransaction() *CreateContractTransaction {
	if x, ok := x.GetTransaction().(*Transaction_CreateContractTransaction); ok {
		return x.CreateContractTransaction
	}
	return nil
}

func (x *Transaction) GetCallContractTransaction() *CallContractTransaction {
	if x, ok := x.GetTransaction().(*Transaction_CallContractTransaction); ok {
		return x.CallContractTransaction
	}
	return nil
}

func (x *Transaction) GetExecutedContractTransaction() *ExecutedContractTransaction {
	if x, ok := x.GetTransaction().(*Transaction_ExecutedContractTransaction); ok {
		return x.ExecutedContractTransaction
	}
	return nil
}

func (x *Transaction) GetDisableContractTransaction() *DisableContractTransaction {
	if x, ok := x.GetTransaction().(*Transaction_DisableContractTransaction); ok {
		return x.DisableContractTransaction
	}
	return nil
}

func (x *Transaction) GetUpdateContractTransaction() *UpdateContractTransaction {
	if x, ok := x.GetTransaction().(*Transaction_UpdateContractTransaction); ok {
		return x.UpdateContractTransaction
	}
	return nil
}

func (x *Transaction) GetSetScriptTransaction() *SetScriptTransaction {
	if x, ok := x.GetTransaction().(*Transaction_SetScriptTransaction); ok {
		return x.SetScriptTransaction
	}
	return nil
}

func (x *Transaction) GetAtomicTransaction() *AtomicTransaction {
	if x, ok := x.GetTransaction().(*Transaction_AtomicTransaction); ok {
		return x.AtomicTransaction
	}
	return nil
}

type isTransaction_Transaction interface {
	isTransaction_Transaction()
}

type Transaction_GenesisTransaction struct {
	GenesisTransaction *genesis.GenesisTransaction `protobuf:"bytes,1000,opt,name=genesis_transaction,json=genesisTransaction,proto3,oneof"`
}

type Transaction_GenesisPermitTransaction struct {
	GenesisPermitTransaction *genesis.GenesisPermitTransaction `protobuf:"bytes,1001,opt,name=genesis_permit_transaction,json=genesisPermitTransaction,proto3,oneof"`
}

type Transaction_GenesisRegisterNodeTransaction struct {
	GenesisRegisterNodeTransaction *genesis.GenesisRegisterNodeTransaction `protobuf:"bytes,1002,opt,name=genesis_register_node_transaction,json=genesisRegisterNodeTransaction,proto3,oneof"`
}

type Transaction_RegisterNodeTransaction struct {
	RegisterNodeTransaction *RegisterNodeTransaction `protobuf:"bytes,1003,opt,name=register_node_transaction,json=registerNodeTransaction,proto3,oneof"`
}

type Transaction_CreateAliasTransaction struct {
	CreateAliasTransaction *CreateAliasTransaction `protobuf:"bytes,1004,opt,name=create_alias_transaction,json=createAliasTransaction,proto3,oneof"`
}

type Transaction_IssueTransaction struct {
	IssueTransaction *IssueTransaction `protobuf:"bytes,1005,opt,name=issue_transaction,json=issueTransaction,proto3,oneof"`
}

type Transaction_ReissueTransaction struct {
	ReissueTransaction *ReissueTransaction `protobuf:"bytes,1006,opt,name=reissue_transaction,json=reissueTransaction,proto3,oneof"`
}

type Transaction_BurnTransaction struct {
	BurnTransaction *BurnTransaction `protobuf:"bytes,1007,opt,name=burn_transaction,json=burnTransaction,proto3,oneof"`
}

type Transaction_LeaseTransaction struct {
	LeaseTransaction *LeaseTransaction `protobuf:"bytes,1008,opt,name=lease_transaction,json=leaseTransaction,proto3,oneof"`
}

type Transaction_LeaseCancelTransaction struct {
	LeaseCancelTransaction *LeaseCancelTransaction `protobuf:"bytes,1009,opt,name=lease_cancel_transaction,json=leaseCancelTransaction,proto3,oneof"`
}

type Transaction_SponsorFeeTransaction struct {
	SponsorFeeTransaction *SponsorFeeTransaction `protobuf:"bytes,1010,opt,name=sponsor_fee_transaction,json=sponsorFeeTransaction,proto3,oneof"`
}

type Transaction_SetAssetScriptTransaction struct {
	SetAssetScriptTransaction *SetAssetScriptTransaction `protobuf:"bytes,1011,opt,name=set_asset_script_transaction,json=setAssetScriptTransaction,proto3,oneof"`
}

type Transaction_DataTransaction struct {
	DataTransaction *DataTransaction `protobuf:"bytes,1012,opt,name=data_transaction,json=dataTransaction,proto3,oneof"`
}

type Transaction_TransferTransaction struct {
	TransferTransaction *TransferTransaction `protobuf:"bytes,1013,opt,name=transfer_transaction,json=transferTransaction,proto3,oneof"`
}

type Transaction_MassTransferTransaction struct {
	MassTransferTransaction *MassTransferTransaction `protobuf:"bytes,1014,opt,name=mass_transfer_transaction,json=massTransferTransaction,proto3,oneof"`
}

type Transaction_PermitTransaction struct {
	PermitTransaction *PermitTransaction `protobuf:"bytes,1015,opt,name=permit_transaction,json=permitTransaction,proto3,oneof"`
}

type Transaction_CreatePolicyTransaction struct {
	CreatePolicyTransaction *CreatePolicyTransaction `protobuf:"bytes,1016,opt,name=create_policy_transaction,json=createPolicyTransaction,proto3,oneof"`
}

type Transaction_UpdatePolicyTransaction struct {
	UpdatePolicyTransaction *UpdatePolicyTransaction `protobuf:"bytes,1017,opt,name=update_policy_transaction,json=updatePolicyTransaction,proto3,oneof"`
}

type Transaction_PolicyDataHashTransaction struct {
	PolicyDataHashTransaction *PolicyDataHashTransaction `protobuf:"bytes,1018,opt,name=policy_data_hash_transaction,json=policyDataHashTransaction,proto3,oneof"`
}

type Transaction_CreateContractTransaction struct {
	CreateContractTransaction *CreateContractTransaction `protobuf:"bytes,1019,opt,name=create_contract_transaction,json=createContractTransaction,proto3,oneof"`
}

type Transaction_CallContractTransaction struct {
	CallContractTransaction *CallContractTransaction `protobuf:"bytes,1020,opt,name=call_contract_transaction,json=callContractTransaction,proto3,oneof"`
}

type Transaction_ExecutedContractTransaction struct {
	ExecutedContractTransaction *ExecutedContractTransaction `protobuf:"bytes,1021,opt,name=executed_contract_transaction,json=executedContractTransaction,proto3,oneof"`
}

type Transaction_DisableContractTransaction struct {
	DisableContractTransaction *DisableContractTransaction `protobuf:"bytes,1022,opt,name=disable_contract_transaction,json=disableContractTransaction,proto3,oneof"`
}

type Transaction_UpdateContractTransaction struct {
	UpdateContractTransaction *UpdateContractTransaction `protobuf:"bytes,1023,opt,name=update_contract_transaction,json=updateContractTransaction,proto3,oneof"`
}

type Transaction_SetScriptTransaction struct {
	SetScriptTransaction *SetScriptTransaction `protobuf:"bytes,1024,opt,name=set_script_transaction,json=setScriptTransaction,proto3,oneof"`
}

type Transaction_AtomicTransaction struct {
	AtomicTransaction *AtomicTransaction `protobuf:"bytes,1025,opt,name=atomic_transaction,json=atomicTransaction,proto3,oneof"`
}

func (*Transaction_GenesisTransaction) isTransaction_Transaction() {}

func (*Transaction_GenesisPermitTransaction) isTransaction_Transaction() {}

func (*Transaction_GenesisRegisterNodeTransaction) isTransaction_Transaction() {}

func (*Transaction_RegisterNodeTransaction) isTransaction_Transaction() {}

func (*Transaction_CreateAliasTransaction) isTransaction_Transaction() {}

func (*Transaction_IssueTransaction) isTransaction_Transaction() {}

func (*Transaction_ReissueTransaction) isTransaction_Transaction() {}

func (*Transaction_BurnTransaction) isTransaction_Transaction() {}

func (*Transaction_LeaseTransaction) isTransaction_Transaction() {}

func (*Transaction_LeaseCancelTransaction) isTransaction_Transaction() {}

func (*Transaction_SponsorFeeTransaction) isTransaction_Transaction() {}

func (*Transaction_SetAssetScriptTransaction) isTransaction_Transaction() {}

func (*Transaction_DataTransaction) isTransaction_Transaction() {}

func (*Transaction_TransferTransaction) isTransaction_Transaction() {}

func (*Transaction_MassTransferTransaction) isTransaction_Transaction() {}

func (*Transaction_PermitTransaction) isTransaction_Transaction() {}

func (*Transaction_CreatePolicyTransaction) isTransaction_Transaction() {}

func (*Transaction_UpdatePolicyTransaction) isTransaction_Transaction() {}

func (*Transaction_PolicyDataHashTransaction) isTransaction_Transaction() {}

func (*Transaction_CreateContractTransaction) isTransaction_Transaction() {}

func (*Transaction_CallContractTransaction) isTransaction_Transaction() {}

func (*Transaction_ExecutedContractTransaction) isTransaction_Transaction() {}

func (*Transaction_DisableContractTransaction) isTransaction_Transaction() {}

func (*Transaction_UpdateContractTransaction) isTransaction_Transaction() {}

func (*Transaction_SetScriptTransaction) isTransaction_Transaction() {}

func (*Transaction_AtomicTransaction) isTransaction_Transaction() {}

var File_managed_transaction_proto protoreflect.FileDescriptor

var file_managed_transaction_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x1a, 0x21, 0x67, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x72, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x26, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x2f, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x27, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x6d, 0x61, 0x73, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x2f,
	0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x14, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x1a, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x21, 0x67, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xea, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1e, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x19, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x64, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xec, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x11, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x13, 0x72, 0x65, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0xee, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x72,
	0x65, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4e, 0x0a, 0x10, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x42,
	0x75, 0x72, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0f, 0x62, 0x75, 0x72, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x51, 0x0a, 0x11, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf0, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x18, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0xf1, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x16, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x17, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x53,
	0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x46,
	0x65, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a,
	0x1c, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf3, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x19, 0x73, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a,
	0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0xf4, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a,
	0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf5, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x19, 0x6d, 0x61, 0x73,
	0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf6, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x4d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x6d, 0x61, 0x73, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf7, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77,
	0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x67, 0x0a, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf9,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x1c, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xfa, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x19, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x1b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xfb, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x19, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xfc, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x63, 0x61, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x1d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0xfd, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x76,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1b, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x1c, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xfe, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1a, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d, 0x0a, 0x1b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xff, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x16, 0x73, 0x65, 0x74, 0x5f,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x61, 0x76, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x12, 0x61, 0x74, 0x6f, 0x6d,
	0x69, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x81,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x61, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x53, 0x0a,
	0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x61, 0x76, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5a, 0x15, 0x77, 0x65, 0x67, 0x6f, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0xaa, 0x02, 0x0f, 0x57, 0x61, 0x76, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_managed_transaction_proto_rawDescOnce sync.Once
	file_managed_transaction_proto_rawDescData = file_managed_transaction_proto_rawDesc
)

func file_managed_transaction_proto_rawDescGZIP() []byte {
	file_managed_transaction_proto_rawDescOnce.Do(func() {
		file_managed_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_managed_transaction_proto_rawDescData)
	})
	return file_managed_transaction_proto_rawDescData
}

var file_managed_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_managed_transaction_proto_goTypes = []interface{}{
	(*Transaction)(nil),                            // 0: wavesenterprise.Transaction
	(*genesis.GenesisTransaction)(nil),             // 1: wavesenterprise.GenesisTransaction
	(*genesis.GenesisPermitTransaction)(nil),       // 2: wavesenterprise.GenesisPermitTransaction
	(*genesis.GenesisRegisterNodeTransaction)(nil), // 3: wavesenterprise.GenesisRegisterNodeTransaction
	(*RegisterNodeTransaction)(nil),                // 4: wavesenterprise.RegisterNodeTransaction
	(*CreateAliasTransaction)(nil),                 // 5: wavesenterprise.CreateAliasTransaction
	(*IssueTransaction)(nil),                       // 6: wavesenterprise.IssueTransaction
	(*ReissueTransaction)(nil),                     // 7: wavesenterprise.ReissueTransaction
	(*BurnTransaction)(nil),                        // 8: wavesenterprise.BurnTransaction
	(*LeaseTransaction)(nil),                       // 9: wavesenterprise.LeaseTransaction
	(*LeaseCancelTransaction)(nil),                 // 10: wavesenterprise.LeaseCancelTransaction
	(*SponsorFeeTransaction)(nil),                  // 11: wavesenterprise.SponsorFeeTransaction
	(*SetAssetScriptTransaction)(nil),              // 12: wavesenterprise.SetAssetScriptTransaction
	(*DataTransaction)(nil),                        // 13: wavesenterprise.DataTransaction
	(*TransferTransaction)(nil),                    // 14: wavesenterprise.TransferTransaction
	(*MassTransferTransaction)(nil),                // 15: wavesenterprise.MassTransferTransaction
	(*PermitTransaction)(nil),                      // 16: wavesenterprise.PermitTransaction
	(*CreatePolicyTransaction)(nil),                // 17: wavesenterprise.CreatePolicyTransaction
	(*UpdatePolicyTransaction)(nil),                // 18: wavesenterprise.UpdatePolicyTransaction
	(*PolicyDataHashTransaction)(nil),              // 19: wavesenterprise.PolicyDataHashTransaction
	(*CreateContractTransaction)(nil),              // 20: wavesenterprise.CreateContractTransaction
	(*CallContractTransaction)(nil),                // 21: wavesenterprise.CallContractTransaction
	(*ExecutedContractTransaction)(nil),            // 22: wavesenterprise.ExecutedContractTransaction
	(*DisableContractTransaction)(nil),             // 23: wavesenterprise.DisableContractTransaction
	(*UpdateContractTransaction)(nil),              // 24: wavesenterprise.UpdateContractTransaction
	(*SetScriptTransaction)(nil),                   // 25: wavesenterprise.SetScriptTransaction
	(*AtomicTransaction)(nil),                      // 26: wavesenterprise.AtomicTransaction
}
var file_managed_transaction_proto_depIdxs = []int32{
	1,  // 0: wavesenterprise.Transaction.genesis_transaction:type_name -> wavesenterprise.GenesisTransaction
	2,  // 1: wavesenterprise.Transaction.genesis_permit_transaction:type_name -> wavesenterprise.GenesisPermitTransaction
	3,  // 2: wavesenterprise.Transaction.genesis_register_node_transaction:type_name -> wavesenterprise.GenesisRegisterNodeTransaction
	4,  // 3: wavesenterprise.Transaction.register_node_transaction:type_name -> wavesenterprise.RegisterNodeTransaction
	5,  // 4: wavesenterprise.Transaction.create_alias_transaction:type_name -> wavesenterprise.CreateAliasTransaction
	6,  // 5: wavesenterprise.Transaction.issue_transaction:type_name -> wavesenterprise.IssueTransaction
	7,  // 6: wavesenterprise.Transaction.reissue_transaction:type_name -> wavesenterprise.ReissueTransaction
	8,  // 7: wavesenterprise.Transaction.burn_transaction:type_name -> wavesenterprise.BurnTransaction
	9,  // 8: wavesenterprise.Transaction.lease_transaction:type_name -> wavesenterprise.LeaseTransaction
	10, // 9: wavesenterprise.Transaction.lease_cancel_transaction:type_name -> wavesenterprise.LeaseCancelTransaction
	11, // 10: wavesenterprise.Transaction.sponsor_fee_transaction:type_name -> wavesenterprise.SponsorFeeTransaction
	12, // 11: wavesenterprise.Transaction.set_asset_script_transaction:type_name -> wavesenterprise.SetAssetScriptTransaction
	13, // 12: wavesenterprise.Transaction.data_transaction:type_name -> wavesenterprise.DataTransaction
	14, // 13: wavesenterprise.Transaction.transfer_transaction:type_name -> wavesenterprise.TransferTransaction
	15, // 14: wavesenterprise.Transaction.mass_transfer_transaction:type_name -> wavesenterprise.MassTransferTransaction
	16, // 15: wavesenterprise.Transaction.permit_transaction:type_name -> wavesenterprise.PermitTransaction
	17, // 16: wavesenterprise.Transaction.create_policy_transaction:type_name -> wavesenterprise.CreatePolicyTransaction
	18, // 17: wavesenterprise.Transaction.update_policy_transaction:type_name -> wavesenterprise.UpdatePolicyTransaction
	19, // 18: wavesenterprise.Transaction.policy_data_hash_transaction:type_name -> wavesenterprise.PolicyDataHashTransaction
	20, // 19: wavesenterprise.Transaction.create_contract_transaction:type_name -> wavesenterprise.CreateContractTransaction
	21, // 20: wavesenterprise.Transaction.call_contract_transaction:type_name -> wavesenterprise.CallContractTransaction
	22, // 21: wavesenterprise.Transaction.executed_contract_transaction:type_name -> wavesenterprise.ExecutedContractTransaction
	23, // 22: wavesenterprise.Transaction.disable_contract_transaction:type_name -> wavesenterprise.DisableContractTransaction
	24, // 23: wavesenterprise.Transaction.update_contract_transaction:type_name -> wavesenterprise.UpdateContractTransaction
	25, // 24: wavesenterprise.Transaction.set_script_transaction:type_name -> wavesenterprise.SetScriptTransaction
	26, // 25: wavesenterprise.Transaction.atomic_transaction:type_name -> wavesenterprise.AtomicTransaction
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_managed_transaction_proto_init() }
func file_managed_transaction_proto_init() {
	if File_managed_transaction_proto != nil {
		return
	}
	file_managed_register_node_transaction_proto_init()
	file_managed_create_alias_transaction_proto_init()
	file_managed_issue_transaction_proto_init()
	file_managed_reissue_transaction_proto_init()
	file_managed_burn_transaction_proto_init()
	file_managed_lease_transaction_proto_init()
	file_managed_lease_cancel_transaction_proto_init()
	file_managed_sponsor_fee_transaction_proto_init()
	file_managed_set_asset_script_transaction_proto_init()
	file_managed_data_transaction_proto_init()
	file_managed_transfer_transaction_proto_init()
	file_managed_mass_transfer_transaction_proto_init()
	file_managed_permit_transaction_proto_init()
	file_managed_create_policy_transaction_proto_init()
	file_managed_update_policy_transaction_proto_init()
	file_managed_policy_data_hash_transaction_proto_init()
	file_managed_create_contract_transaction_proto_init()
	file_managed_call_contract_transaction_proto_init()
	file_managed_executed_contract_transaction_proto_init()
	file_managed_disable_contract_transaction_proto_init()
	file_managed_update_contract_transaction_proto_init()
	file_managed_set_script_transaction_proto_init()
	file_managed_atomic_transaction_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_managed_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_managed_transaction_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Transaction_GenesisTransaction)(nil),
		(*Transaction_GenesisPermitTransaction)(nil),
		(*Transaction_GenesisRegisterNodeTransaction)(nil),
		(*Transaction_RegisterNodeTransaction)(nil),
		(*Transaction_CreateAliasTransaction)(nil),
		(*Transaction_IssueTransaction)(nil),
		(*Transaction_ReissueTransaction)(nil),
		(*Transaction_BurnTransaction)(nil),
		(*Transaction_LeaseTransaction)(nil),
		(*Transaction_LeaseCancelTransaction)(nil),
		(*Transaction_SponsorFeeTransaction)(nil),
		(*Transaction_SetAssetScriptTransaction)(nil),
		(*Transaction_DataTransaction)(nil),
		(*Transaction_TransferTransaction)(nil),
		(*Transaction_MassTransferTransaction)(nil),
		(*Transaction_PermitTransaction)(nil),
		(*Transaction_CreatePolicyTransaction)(nil),
		(*Transaction_UpdatePolicyTransaction)(nil),
		(*Transaction_PolicyDataHashTransaction)(nil),
		(*Transaction_CreateContractTransaction)(nil),
		(*Transaction_CallContractTransaction)(nil),
		(*Transaction_ExecutedContractTransaction)(nil),
		(*Transaction_DisableContractTransaction)(nil),
		(*Transaction_UpdateContractTransaction)(nil),
		(*Transaction_SetScriptTransaction)(nil),
		(*Transaction_AtomicTransaction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_managed_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_managed_transaction_proto_goTypes,
		DependencyIndexes: file_managed_transaction_proto_depIdxs,
		MessageInfos:      file_managed_transaction_proto_msgTypes,
	}.Build()
	File_managed_transaction_proto = out.File
	file_managed_transaction_proto_rawDesc = nil
	file_managed_transaction_proto_goTypes = nil
	file_managed_transaction_proto_depIdxs = nil
}
